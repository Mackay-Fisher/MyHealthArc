//
//  ChatbotViewModel.swift
//  myHealthArc-new-frontend
//
//  Created by Phatak, Rhea on 11/12/24.
//

import SwiftUI
import OpenAI

final class ChatbotViewModel: ObservableObject {
    @Published var messages: [ChatMessage] = []

    func sendUserMessage(_ message: String) {
        let userMessage = ChatMessage(message: message, isUser: true)
        messages.append(userMessage)
        
        let openAI = OpenAI(apiToken: "")
        
        let query = ChatQuery(
            messages: [.init(role: .user, content: "hello")!],
                    model: .gpt3_5Turbo
                )
                
            openAI.chats(query: query) { result in
                switch result {
                case .success(let success):
                    guard let choice = success.choices.first else {
                        return
                    }
                    guard let message = choice.message.content?.string else { return }
                    DispatchQueue.main.async {
                        self.receiveChatbotMessage(message)
                    }
                case .failure(let failure):
                    self.receiveChatbotMessage("Chatbot is not working. Please try again.")
                    print(failure)
                }
            }
    }

    private func receiveChatbotMessage(_ message: String) {
        let receivedMessage = ChatMessage(message: message, isUser: false)
        messages.append(receivedMessage)
    }
}
